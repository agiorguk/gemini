= Vertical extent information
include::includes/partials-attributes.adoc[]
[#16]

[width="100%",cols="50%,50%",]
|===
|UK GEMINI id |16

|Definition |Vertical domain of the data resource

|Purpose and meaning |The purpose of this element is to describe the
vertical range of the data resource (where relevant).

|Obligation |Optional

|Occurrence |Multiple

|Data type |Class

|Domain a|
EX_VerticalExtent, which comprises of three elements

[width="100%",cols="25%,25%,25%,25%",]
!===
! !minimum value !maximum value !coordinate reference system

!Definition !lowest vertical extent contained in the data resource
!highest vertical extent contained in the data resource !vertical
coordinate reference system to which the maximum and minimum values are
measured

!Obligation !mandatory !mandatory !mandatory

!Occurrence !single !single !single

!Data type !real !real !class

!Domain !real number !real number !

!Other comments !- !- !For example, code provided in the EPSG Geodetic
Parameter Registry
!===

|Guidance a|
. Minimum value: Identify approximate lowest vertical extent in the
specified coordinate reference system
. Maximum value: Identify approximate highest vertical extent in the
specified coordinate reference system
. Coordinate reference system: Identify coordinate reference system used
for the vertical extent measurements. This should be recorded as a name
or as a code, for example as provided in the EPSG Geodetic Parameter
Registry produced by The International Association of Oil & Gas
Producers (see http://www.epsg-registry.org/)

|Comment |This element should be used only where vertical extent is
significant, e.g. in geology, mining, meteorology etc.

|Examples a|
* Minimum value: -100.0
* Maximum value: 0.0
* Coordinate reference system: height in metres above Newlyn Datum

|Revision date |March 2019
|===

.Corresponding element in other standards...
[%collapsible]
====
|===
|Standard |Name |Comparison

|INSPIRE Metadata |None |
ifdef::variant-dataset[]
|ISO 19115:2003 |MD_DataIdentification.extent > EX_Extent >
EX_VerticalExtent |Equivalent

|ISO 19139:2007
|/gmd:MD_Metadata/gmd:identificationInfo/gmd:MD_DataIdentification/gmd:extent/gmd:EX_Extent/gmd:verticalElement
|Equivalent
|===
endif::[]
ifdef::variant-service[]
|ISO 19119:2006+Amd:1 |SV_ServiceIdentification.extent > EX_Extent >
EX_VerticalExtent |Identical

|ISO 19139:2007
|/gmd:MD_Metadata/gmd:identificationInfo/srv:SV_ServiceIdentification/srv:extent/gmd:EX_Extent/gmd:verticalElement
|Equivalent
|===
endif::[]
====

.Change history...
[%collapsible]
====
* GEMINI 1 to 2.0: made optional; +
occurrence changed from multiple to single; +
description of class EX_VerticalExtent changed to match change to ISO
19115.
* GEMINI 2.1 to 2.2: made multiple again
====

.Encoding guidelines...
[%collapsible]
====
|===
|Guidelines a|
. The encoding of the vertical extent information is explained. The
vertical extent information is expressed by a minimum and maximum
coordinate value and a vertical CRS. The vertical CRS expresses the CRS
of the vertical extent coordinates alone. It does not necessarily
express the vertical CRS to which vertical coordinates in the data are
referenced - in other words it is possible that the vertical extent is
defined in a different CRS from the vertical CRS of the data. This is
convenient if it were the case that datasets within a domain were
referenced to many different vertical CRSs because it could be decided
that all vertical extents in metadata are to be referenced to a single
common vertical CRS to aid searching or understanding by users.
Searching by vertical extent, referenced to different vertical CRSs,
across metadata sets would be complicated by the need to undertake many
coordinate operations - which is not necessarily a trivial task - or
even possible in all cases.
. The CRS of vertical extent elements must be provided in order to give
meaning to the minimum and maximum coordinates. From the CRS, for
example, it is possible to determine the orientation of the coordinate
system axis (i.e. do positive values increase upwards or downwards from
the zero reference) and the units of the coordinate values.
. There are two approaches to encoding the vertical CRS: by reference
(Example One) or by value (Example Two). These examples express the same
information: that the vertical extent coordinates are referenced to
Ordnance Datum (Newlyn). Codes and GML CRS data are from the
http://www.epsg-registry.org/[EPSG Registry].
. Additionally, the gco:nilReason attribute can be used if the vertical
CRS is unknown (Example Three) but this renders the vertical extent
information ambiguous at best. Consequently it would be better to
refrain from including vertical extent information in the metadata
instance altogether.

|Example a|
Example One (datasets/series) - Vertical CRS by reference
ifdef::variant-dataset[]
....
include::../snippets/dataset-extent-verticalcrs-reference.xml[]
....

Example Two (datasets/series) - Vertical CRS by value

....
include::../snippets/dataset-extent-verticalcrs-value.xml[]
....
endif::[]
ifdef::variant-service[]
Example One (services) - Vertical CRS by reference

....
include::../snippets/service-extent-verticalcrs-reference.xml[]
....

Example Two (services) - Vertical CRS by value

....
include::../snippets/service-extent-verticalcrs-value.xml[]
....

endif::[]

Example Three - Vertical CRS unknown

....
include::../snippets/extent-verticalcrs-unknown.xml[]
....

|===
====

.Metadata errors observed...
[%collapsible]
====
No error information available
====